@use "sass:math";

@import url("https://fonts.googleapis.com/css2?family=Red+Hat+Display");

$background-colour: rgb(252, 252, 252);
$primary-colour: rgb(218, 162, 30);
$lighter: lighten($primary-colour, 30%);
$darker: darken($primary-colour, 10%);

body {
  font-family: "Red Hat Display";
  text-align: center;
  background-color: $background-colour;
  color: $primary-colour;
  margin: 40vh;

  perspective: 100vh;
  perspective-origin: center;
}

main {
  height: 90vh;
}

span {
  display: block;
  font-size: 10vh;
}

@mixin activated {
  color: red;
}

@mixin deactivated {
  color: blue;
}

.in {
  animation: rotate-in 2s linear 0s infinite;
}

.out {
  animation: rotate-out 2s linear 0s infinite;
}

$perspective: 40vh;
$y-distance: 15vh;
$z-distance: 10vh;
$rotation: 1turn;

$anims: "in", "out";

@each $anim in $anims {
  @keyframes rotate-#{$anim} {
    @for $i from 0 through 100 {
      #{$i}% {
        transform: perspective($perspective)
          translateY(
            math.cos(math.div((math.$pi * ($i - 25) * 2), 100)) * -$y-distance
          )
          translateZ(
            (
                math.sin(math.div((math.$pi * ($i - 25) * 2), 100)) *
                  $z-distance
              ) +
              $z-distance
          )
          rotateX(($i * (0.01)) * -$rotation);

        @if #{$anim} == "in" {
          @if $i == 0 {
            @include deactivated;
          }
          @if $i == 100 {
            @include activated;
          }
        }

        @if #{$anim} == "out" {
          @if $i == 0 {
            @include activated;
          }
          @if $i == 100 {
            @include deactivated;
          }
        }
        // swap Y and X above, and remove the '-' before $rotation, to rotate around the Y-axis
      }
    }
  }
}
