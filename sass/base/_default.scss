@use "sass:math";
@use "layout";
@use "vars";

@import "font";

body {
  @include deactivated;
}

#clock {
  perspective: 100vh;
  perspective-origin: center;
}

.inactive {
  @include deactivated;
  animation: #{vars.$animation}-out vars.$anim-time vars.$anim-type;
}

.active {
  @include activated;
  animation: #{vars.$animation}-in vars.$anim-time vars.$anim-type;
}

@keyframes fade-in {
  0% {
    @include deactivated;
  }
  100% {
    @include activated;
  }
}

@keyframes fade-out {
  0% {
    @include activated;
  }
  100% {
    @include deactivated;
  }
}

////

$perspective: 40vh;
$y-distance: 10vh;
$z-distance: 10vh;
$rotation: 1turn;

$anims: "in", "out";

@each $anim in $anims {
  @keyframes rotate-#{$anim} {
    @for $i from 0 through 100 {
      #{$i}% {
        transform: perspective($perspective)
          translateY(
            math.cos(math.div((math.$pi * ($i - 25) * 2), 100)) * -$y-distance
          )
          translateZ(
            (
                math.sin(math.div((math.$pi * ($i - 25) * 2), 100)) *
                  $z-distance
              ) +
              $z-distance
          )
          rotateX(($i * (0.01)) * -$rotation);

        @if #{$anim} == "in" {
          @if $i == 0 {
            @include deactivated;
          }
          @if $i == 100 {
            @include activated;
          }
        }

        @if #{$anim} == "out" {
          @if $i == 0 {
            @include activated;
          }
          @if $i == 100 {
            @include deactivated;
          }
        }
        // swap Y and X above, and remove the '-' before $rotation, to rotate around the Y-axis
      }
    }
  }
}
