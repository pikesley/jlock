@use "sass:math";

$tau: math.$pi * 2;

@function offset-index($index, $amount: 25) {
  @return $index - $amount;
}

@function radians($index) {
  @return math.div($tau * offset-index($index), 100);
}

@function y-value($index, $scale-factor) {
  @return 0 - (math.cos(radians($index)) * $scale-factor);
}

@function z-value($index, $scale-factor, $depth: 0) {
  @return (math.sin(radians($index)) * $scale-factor) + $depth;
}

$perspective: 40vh;
$y-distance: 10vh;
$z-distance: 10vh;
$rotation: 1turn;

$anims: "in", "out";

@each $anim in $anims {
  @keyframes rotate-#{$anim} {
    @for $i from 0 through 100 {
      #{$i}% {
        transform: perspective($perspective)
          translateY(y-value($i, $y-distance))
          translateZ(z-value($i, $z-distance, $z-distance))
          rotateX(($i * (0.01)) * -$rotation);

        // @if #{$anim} == "in" {
        //   @if $i == 0 {
        //     @include deactivated;
        //   }
        //   @if $i == 100 {
        //     @include activated;
        //   }
        // }

        // @if #{$anim} == "out" {
        //   @if $i == 0 {
        //     @include activated;
        //   }
        //   @if $i == 100 {
        //     @include deactivated;
        //   }
        // }
        // swap Y and X above, and remove the '-' before $rotation, to rotate around the Y-axis
      }
    }
  }
}
