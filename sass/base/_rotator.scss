@use "sass:math";

@function y-value($index, $scale-factor) {
  @return math.cos(math.div((math.$pi * ($index - 25) * 2), 100)) *
    -$scale-factor;
}

@function z-value($index, $scale-factor) {
  @return (
      math.sin(math.div((math.$pi * ($index - 25) * 2), 100)) * $scale-factor
    ) + $scale-factor;
}

$perspective: 40vh;
$y-distance: 10vh;
$z-distance: 10vh;
$rotation: 1turn;

$anims: "in", "out";

@each $anim in $anims {
  @keyframes rotate-#{$anim} {
    @for $i from 0 through 100 {
      #{$i}% {
        transform: perspective($perspective)
          translateY(y-value($i, $y-distance))
          translateZ(z-value($i, $z-distance))
          rotateX(($i * (0.01)) * -$rotation);

        // @if #{$anim} == "in" {
        //   @if $i == 0 {
        //     @include deactivated;
        //   }
        //   @if $i == 100 {
        //     @include activated;
        //   }
        // }

        // @if #{$anim} == "out" {
        //   @if $i == 0 {
        //     @include activated;
        //   }
        //   @if $i == 100 {
        //     @include deactivated;
        //   }
        // }
        // swap Y and X above, and remove the '-' before $rotation, to rotate around the Y-axis
      }
    }
  }
}
